//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: subscriptions.proto

package proto;

@kotlin.jvm.JvmSynthetic
public inline fun weatherTypeRequest(block: proto.WeatherTypeRequestKt.Dsl.() -> kotlin.Unit): proto.WeatherTypeRequest =
  proto.WeatherTypeRequestKt.Dsl._create(proto.WeatherTypeRequest.newBuilder()).apply { block() }._build()
public object WeatherTypeRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: proto.WeatherTypeRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: proto.WeatherTypeRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): proto.WeatherTypeRequest = _builder.build()

    /**
     * <code>string city = 1;</code>
     */
    public var city: kotlin.String
      @JvmName("getCity")
      get() = _builder.getCity()
      @JvmName("setCity")
      set(value) {
        _builder.setCity(value)
      }
    /**
     * <code>string city = 1;</code>
     */
    public fun clearCity() {
      _builder.clearCity()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TypeProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .subscriptions.WeatherType type = 2;</code>
     */
     public val type: com.google.protobuf.kotlin.DslList<proto.WeatherType, TypeProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getTypeList()
      )
    /**
     * <code>repeated .subscriptions.WeatherType type = 2;</code>
     * @param value The type to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addType")
    public fun com.google.protobuf.kotlin.DslList<proto.WeatherType, TypeProxy>.add(value: proto.WeatherType) {
      _builder.addType(value)
    }/**
     * <code>repeated .subscriptions.WeatherType type = 2;</code>
     * @param value The type to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignType")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<proto.WeatherType, TypeProxy>.plusAssign(value: proto.WeatherType) {
      add(value)
    }/**
     * <code>repeated .subscriptions.WeatherType type = 2;</code>
     * @param values The type to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllType")
    public fun com.google.protobuf.kotlin.DslList<proto.WeatherType, TypeProxy>.addAll(values: kotlin.collections.Iterable<proto.WeatherType>) {
      _builder.addAllType(values)
    }/**
     * <code>repeated .subscriptions.WeatherType type = 2;</code>
     * @param values The type to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllType")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<proto.WeatherType, TypeProxy>.plusAssign(values: kotlin.collections.Iterable<proto.WeatherType>) {
      addAll(values)
    }/**
     * <code>repeated .subscriptions.WeatherType type = 2;</code>
     * @param index The index to set the value at.
     * @param value The type to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setType")
    public operator fun com.google.protobuf.kotlin.DslList<proto.WeatherType, TypeProxy>.set(index: kotlin.Int, value: proto.WeatherType) {
      _builder.setType(index, value)
    }/**
     * <code>repeated .subscriptions.WeatherType type = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearType")
    public fun com.google.protobuf.kotlin.DslList<proto.WeatherType, TypeProxy>.clear() {
      _builder.clearType()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun proto.WeatherTypeRequest.copy(block: proto.WeatherTypeRequestKt.Dsl.() -> kotlin.Unit): proto.WeatherTypeRequest =
  proto.WeatherTypeRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()
